/*******************************************************************************

//			                 总线从机-Usart实现

*******************************************************************************/
#ifndef _BUS_SLV_USART_H
#define	_BUS_SLV_USART_H

/*****************************************************************************
                             相关配置
******************************************************************************/

#ifndef BUS_SLV_USART_DATA_SIZE
  #define BUS_SLV_USART_DATA_SIZE   (256+16) //收发数据缓冲区长度(cBootDcl要求)
#endif

/*******************************************************************************
                              相关结构
*******************************************************************************/
#include "BusBase.h"      //从机基类
#include "UsartDev.h"      //通讯
//主结构
struct _BusSlvUsart{
  struct _BusBase Base;                     //从机基类
  //收发缓冲区，返回需要接收数据的最大长度。
  unsigned char DataBuf[BUS_SLV_USART_DATA_SIZE]; 
};

/*****************************************************************************
                             相关函数
******************************************************************************/

//-----------------------------初始化函数-------------------------------
void BusSlvUsart_Init(struct _BusSlvUsart *pBus,
                      unsigned char BusId);    //分配的总线ID号
 
//-------------------------------普通Tick查询任务----------------------------
//将此函数放入系统1ms进程中
void BusSlvUsart_TickTask(struct _BusSlvUsart *pBus);

//-------------------------------中断任务----------------------------
//将此函数放入1ms间隔中断进程中  Base.Ex.U8[0]即内部TIMER
#define BusSlvUsart_msIntTask(bus) \
  do{if((bus)->Base.Ex.U8[0]) (bus)->Base.Ex.U8[0]--;}while(0)

/*****************************************************************************
                          回调函数-底层支持
******************************************************************************/  

//----------------------------由总线ID获取设备----------------------------
struct _UsartDev *BusSlvUsart_cbGetDev(unsigned char BusId);

//----------------------------由总线ID获取对应从机地址--------------------
unsigned char BusSlvUsart_cbGetAdr(unsigned char BusId);

//----------------------------------由总线ID控制RTC--------------------------
void BusSlvUsart_cbRTS(unsigned char BusId, unsigned char IsSend);

//----------------------------由总线ID得帧间隔--------------------------
unsigned char BusSlvUsart_cbGetSpaceT(unsigned char BusId);

/*****************************************************************************
                          回调函数-应用层
******************************************************************************/
    
//-----------------------------数据处理函数--------------------------------
//接收完数据后将调用此函数
//此函数内，应负责处理pBus->DataBuf缓冲区里的数据,并将处理结果返回
//返回-1表示错误;  0:数据正确，但不返回数据 
//其它:返回数据个数
signed short BusSlvUsart_cbDataPro(struct _BusSlvUsart *pBus,
                                    unsigned short RcvData,//接收数据长度
                                    unsigned char SlvAdr); //从机地址


#endif //_BUS_SLV_USART_H




